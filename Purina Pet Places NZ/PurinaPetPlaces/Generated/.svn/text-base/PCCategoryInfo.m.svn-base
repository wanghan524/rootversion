/*
	PCCategoryInfo.h
	The implementation of properties and methods for the PCCategoryInfo object.
	Generated by SudzC.com
*/
#import "PCCategoryInfo.h"

@implementation PCCategoryInfo
	@synthesize CategoryID = _CategoryID;
	@synthesize CategoryName = _CategoryName;
	@synthesize SubCategoryID = _SubCategoryID;
	@synthesize SubCategoryName = _SubCategoryName;
	@synthesize Count = _Count;

	- (id) init
	{
		if(self = [super init])
		{
			self.CategoryName = nil;
			self.SubCategoryName = nil;

		}
		return self;
	}

	+ (PCCategoryInfo*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (PCCategoryInfo*)[[PCCategoryInfo alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.CategoryID = [[Soap getNodeValue: node withName: @"CategoryID"] intValue];
			self.CategoryName = [Soap getNodeValue: node withName: @"CategoryName"];
			self.SubCategoryID = [[Soap getNodeValue: node withName: @"SubCategoryID"] intValue];
			self.SubCategoryName = [Soap getNodeValue: node withName: @"SubCategoryName"];
			self.Count = [[Soap getNodeValue: node withName: @"Count"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CategoryInfo"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<CategoryID>%@</CategoryID>", [NSString stringWithFormat: @"%i", self.CategoryID]];
		if (self.CategoryName != nil) [s appendFormat: @"<CategoryName>%@</CategoryName>", [[self.CategoryName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<SubCategoryID>%@</SubCategoryID>", [NSString stringWithFormat: @"%i", self.SubCategoryID]];
		if (self.SubCategoryName != nil) [s appendFormat: @"<SubCategoryName>%@</SubCategoryName>", [[self.SubCategoryName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Count>%@</Count>", [NSString stringWithFormat: @"%i", self.Count]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[PCCategoryInfo class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
