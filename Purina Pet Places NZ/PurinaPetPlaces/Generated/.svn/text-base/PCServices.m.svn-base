/*
	PCServices.m
	Creates a list of the services available with the PC prefix.
	Generated by SudzC.com
*/
#import "PCServices.h"

@implementation PCServices

@synthesize logging, server, defaultServer;

@synthesize petCentricSvc;


#pragma mark Initialization

-(id)initWithServer:(NSString*)serverName{
	if(self = [self init]) {
		self.server = serverName;
	}
	return self;
}

+(PCServices*)service{
	return (PCServices*)[[PCServices alloc] init];
}

+(PCServices*)serviceWithServer:(NSString*)serverName{
	return (PCServices*)[[PCServices alloc] initWithServer:serverName];
}

#pragma mark Methods

-(void)setLogging:(BOOL)value{
	logging = value;
	[self updateServices];
}

-(void)setServer:(NSString*)value{
	server = value;
	[self updateServices];
}

-(void)updateServices{

	[self updateService: self.petCentricSvc];
}

-(void)updateService:(SoapService*)service{
	service.logging = self.logging;
	if(self.server == nil || self.server.length < 1) { return; }
	service.serviceUrl = [service.serviceUrl stringByReplacingOccurrencesOfString:defaultServer withString:self.server];
}

#pragma mark Getter Overrides


-(PCPetCentricSvc*)petCentricSvc{
	if(petCentricSvc == nil) {
		petCentricSvc = [[PCPetCentricSvc alloc] init];
	}
	return petCentricSvc;
}


@end
			